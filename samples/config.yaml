template_config: #单文件输出模板
   - name: 文件基础模板
     file: "src/template/file.template"
   - name: 下载文件模板1
     file: src/template/file1.template
     output_dir: /src/download/
   - name: 下载文件模板2
     file: src/template/file2.template
     output_dir: /src/download/
   - name: 组件入口模板
     file: src/template/component/组件入口模板.ejs
   - name: 组件源代码模板
     file: src/template/component/组件源代码模板.ejs
   - name: 组件演示模板
     file: src/template/component/组件演示模板.ejs
   - name: 组件演示文档模板
     file: src/template/component/组件演示文档模板.ejs
file_config: # 单文件输出配置
   constants: #常量配置
      test: true # 是否打印测试结果
      output_dir: /src/constants/
      generator: # 代码生成器，使用相同参数，根据列表生成多个文件
        - file: constants.js
          template: /src/template/constants.ejs
      params: # 数据参数
         - group: 分组说明 # 分组
           constants:
              SERVER1:
                 value: 常量名称1
                 desc: 常量说明1 # 备注说明
         - group: 分组说明 # 分组
           constants:
              SERVER2:
                 import: import { type } from "file";
                 type: type
                 value: |
                    {"api":"常量名称2" }
                 desc: 常量说明2 # 备注说明
   element: #element文件自动配置
      output_dir: /src/packages/element
      generator: # 代码生成器，使用相同参数，根据列表生成多个文件
         # ${默认大小写} $U{}全部大写 $L{}全部小写 $F{}首字母大写(仅转换首字母)
         - file: index.a.ts # 入口文件
           template: 组件入口模板
           sub_dir: ${type}/${name}/${type}/${name} # 可根据参数替换
         - file: ${name}.a.vue # 源代码文件，可根据参数替换，
           overwrite: false # 是否覆盖，默认为true
           template: 组件源代码模板
           sub_dir: ${type}/${name}/src
         - file: demo.a.vue # 演示文件
           template: 组件演示模板
           sub_dir: ${type}/${name}/docs
         - file: README.a.md # 演示文档
           template: 组件演示文档模板
           sub_dir: ${type}/${name}/docs
      list: # 多项目配置出来
         - name: Badge # 组件名称
           flows: # 控制生成器执行的某些步骤，如没有则全部执行
              - 0
              - 1
           params: # 数据参数
              type: basic
              desc: 徽标组件
              props: # 组件属性配置
                 - name: type #属性名
                   type: | # 属性类型
                      { type: Array<String>, default: [] }
         - name: Button # 按钮组件
           skip: true # 是否跳过
           params: # 数据参数
              type: basic
              desc: 按钮组件

